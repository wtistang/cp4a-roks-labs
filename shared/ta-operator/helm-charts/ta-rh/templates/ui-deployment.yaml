# Â© Copyright IBM Corporation 2017
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# The transadvui pod deploys the Transformation Advisor UI as a container
#

kind: Deployment
apiVersion: apps/v1beta2

metadata:
  name: {{ template "fullname" . }}-ui
  labels:
    app: {{ template "fullname" . }}-ui
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}-ui
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-ui
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        component: ui
      annotations:
        productName: "{{ .Chart.Description }}"
        productID: "Tool"
        productVersion: "{{ .Chart.Version }}"
    spec:
      hostIPC: false
      hostNetwork: false
      hostPID: false
      securityContext:
        runAsNonRoot: true
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 3
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      serviceAccountName: default
      containers:
        - name: {{ .Chart.Name }}-ui
          image: "{{ .Values.transadvui.image }}"
          imagePullPolicy: Always
          resources:
{{ toYaml .Values.transadvui.resources | indent 12 }}
          ports:
            - containerPort: 3000
              name: ui
          env:
            - name: TA_ON_ICP
              value: "true"
            - name: TA_API_SERVER
              value: http://{{ template "fullname" . }}-server:9080/lands_advisor
            - name:  TA_PUBLIC_ACCESSIBLE_API_SERVER_URL
              value: "{{ .Values.transadv.publicUrl }}"
            - name: TA_UI_SERVICE_NAME
              value: {{ template "fullname" . }}-ui
            - name:  TA_UI_PORT 
              value: "3000"
            - name: TA_AUTH_UI_DISABLED
              value: "{{ .Values.authentication.disabled.liberty }}"
            - name: TA_DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.authentication.ocp.secretName | default "xxplaceholderxx" }}
                  key: db_username
                  optional: true
            - name: TA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.authentication.ocp.secretName | default "xxplaceholderxx" }}
                  key: secret
                  optional: true
            - name: TA_AUTH_MASTER_IP
              value: "{{ .Values.authentication.ocp.edgeIp }}"
            - name: TA_MASTER_NODE_URL
              value: "https://{{ .Values.authentication.ocp.edgeIp }}:{{ .Values.authentication.ocp.endpointPort }}"
            - name: TA_AUTH_MASTER_ENDPOINT_PORT #8443
              value: "{{ .Values.authentication.ocp.endpointPort }}"
            - name: TA_AUTH_OIDC_ENDPOINT_PORT #9443
              value: "{{ .Values.authentication.oidc.endpointPort }}"
            - name: TA_AUTH_OIDC_CLIENT_ID
              value:  "{{ .Values.authentication.oidc.clientId }}"
            - name: TA_AUTH_OIDC_CLIENT_SECRET
              value: "{{ .Values.authentication.oidc.clientSecret }}"
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
            - name: TA_DEMO_ENABLED
              value: "false"
            - name: TA_AUTH_OIDC_CALLBACK_URI
              value: "https://{{ .Values.route.hostname }}/auth/callback"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            privileged: false
            capabilities:
              drop:
              - ALL
          # set liveness probe to determine if container needs to be restarted
          # this test is the same as the readiness probe however this tests for multiple long periods
          # of time of non-responsiveness - if fails the tests, restarts the container
          # - command, http, or tcp
          # ref : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
          livenessProbe:
            exec:
              command:
              - bash
              - -c
              - curl -s -k localhost:3000 | grep "Redirecting"
            initialDelaySeconds: {{ .Values.transadvui.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.transadvui.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.transadvui.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.transadvui.livenessProbe.failureThreshold }}
          # set readiness probe to determine if container is ready to accept traffic
          # - command, http, or tcp
          # looks for short durations of non-responsiveness to identify as unavail to accept traffic
          # ref : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - curl -s -k localhost:3000 | grep "Redirecting"
            initialDelaySeconds: {{ .Values.transadvui.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.transadvui.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.transadvui.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.transadvui.readinessProbe.failureThreshold }}
